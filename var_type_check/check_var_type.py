from frequent_pattern_checker import Function

import pprint
from solidity_parser import parser


def traverse_ast(sourceUnit):
    """
    Traverse the AST and Extract all require statement conditions and if statement conditions from the AST

    Args:
        sourceUnit: a AST generated by parser

    Returns:
        A List of function instances extracted from sourceUnit
    """
    function_list = []
    # # debug
    # pprint.pprint(sourceUnit)
    for contract in sourceUnit['children']:
        # debug
        print("Contract: " + contract['name'])
        if 'subNodes' in contract.keys():
            for node in contract['subNodes']:
            # for node in sourceUnit['children'][0]['subNodes']:
                # Each node represents a function.
                if node['type'] == 'FunctionDefinition':
                    # func_name = node['name']
                    # para_list = []
                    # for para in node['parameters']['parameters']:
                    #     type = para['typeName']['name']
                    #     para_list.append(type)
                    # if node['returnParameters']:
                    #     return_value = node['returnParameters']['parameters'][0]['typeName']['name']
                    # else:
                    #     return_value = None
                    # function = Function(func_name, para_list, return_value)

                    require_list = []
                    if_list = []

                    # debug
                    # pprint.pprint(node)
                    if len(node['body']) > 0:
                        for stat in node['body']['statements']:
                            # Extract require statement condition
                            if 'expression' in stat.keys():
                                if 'expression' in stat['expression'].keys():
                                    if "name" in stat['expression']['expression'].keys():
                                        if stat['expression']['expression']['name'] == 'require':
                                            # debug
                                            pprint.pprint(stat['expression']['arguments'])
                                            require_condition = stat['expression']['arguments']
                                            require_list.append(require_condition)
                            # Extract if statement condition
                            if stat['type'] == 'IfStatement':
                                if_condition = stat['condition']
                                if_list.append(if_condition)

                    # # Add require_condition and if_condition to Function instance
                    # function.add_require_condition(require_list)
                    # function.add_if_condition(if_list)
                    #
                    # function_list.append(function)

                    # debug
                    # print("Require stats List:")
                    # for rs in require_list:
                    #     print(rs)
                    # print("=========================")
                    # print("If stats List:")
                    # for ifs in if_list:
                    #     print(ifs)
        print("=================================")
    return function_list


def init(file_path):
    sourceUnit = parser.parse_file(file_path)
    traverse_ast(sourceUnit)


if __name__ == '__main__':
    init("/Users/luliu/PycharmProjects/solidity-parser-python/samples/0x0bcbab2fecc30b7341132b4ebb36d352e035f1bd.sol")